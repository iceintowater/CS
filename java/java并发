# 锁  
## synchronized  
### 数据结构

#### markword
对象头中：  
markword: gc 标记 、 分代年龄 、 hashcode 、 线程id，锁标志




#### 线程获取锁的过程
偏向锁->轻量级锁->自旋锁->重锁

- 获取偏向锁的过程
1、线程看markword中锁标志是否是偏向状态，是的话进入下面步骤，再判断是否是自己线程id，是的话直接执行5，否则2
2、是偏向状态，但不是自己id,进行cas，若成功，则5，否则3  
3、说明有竞争，则持有锁的线程到达全局安全点（没有字节码执行）被挂起，将锁升级为轻量锁，撤销掉偏向锁。持有锁的线程继续执行
4、同步代码  

- 获取轻量级锁的过程
判断是否是无锁状态  
是的话在线程栈中创建lock record,复制markword到lock record  
cas 将markword中指针指向lock record，将lock record中的owner指针指向对象头   
成功的话，把锁变成轻量级锁，执行代码     
失败的话，看markword指针是否指向lockrecord,成功的话直接执行同步代码，同样也要升级下锁。还是不行的话，升级为重🔒，并开始尝试自旋了   

- 轻量级锁的释放
cas lock record 到 mark word
成功即可。若不成功，则说明有竞争，锁变成了重级别锁。

- 自旋  
循环看锁是否已经被消除，等待获得锁

- 重🔒

